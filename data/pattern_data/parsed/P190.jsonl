{"pattern": "[X] and [Y] are twin cities.", "example": "[X]:Hubli and [Y]:Dharwad :are :twin :cities.", "lemma": "twin-city", "extended_lemma": "is-twin-city", "tense": "present", "spike_query": "<>subject:Doha $and object:[w={}]Ankara $are $twin $cities."}
{"pattern": "[Y] and [X] are twin cities.", "example": "[Y]:Hubli and [X]:Dharwad are :twin :cities.", "lemma": "twin-city", "extended_lemma": "is-twin-city", "tense": "present", "spike_query": "object:[w={}]Ankara $and <>subject:Doha $are $twin $cities."}
{"pattern": "[Y] is a twin city of [X].", "example": "[Y]:Hubli :is :a :twin :city :of [X]:Dharwad.", "lemma": "twin-city", "extended_lemma": "is-twin-city-of", "tense": "present", "spike_query": "object:[w={}]Ankara $is $a $twin $city $of <>subject:Doha."}
{"pattern": "[X] is a twin city of [Y].", "example": "[X]:Hubli :is :a :twin :city :of [Y]:Dharwad.", "lemma": "twin-city", "extended_lemma": "is-twin-city-of", "tense": "present", "spike_query": "<>subject:Doha $is $a $twin $city $of object:[w={}]Ankara."}
{"pattern": "[X] and [Y] signed a twin cities agreement.", "example": "[X]Doha and [Y]Ankara :signed :a :twin :cities :agreement", "lemma": "sign-twin-city", "extended_lemma": "sign-twin-city-agreement", "tense": "past", "spike_query": "<>subject:Doha $and object:[w={}]Ankara $signed $a $twin $cities $agreement."}
{"pattern": "[Y] and [X] signed a twin cities agreement.", "example": "[Y]Doha and [X]Ankara :signed :a :twin :cities :agreement", "lemma": "sign-twin-city", "extended_lemma": "sign-twin-city-agreement", "tense": "past", "spike_query": "object:[w={}]Ankara $and <>subject:Doha $signed $a $twin $cities $agreement."}
{"pattern": "[X] and [Y] announced a twin cities agreement.", "example": "[X]Doha and [Y]Ankara :announced :a :twin :cities :agreement", "lemma": "announce-twin-city", "extended_lemma": "announce-twin-city-agreement", "tense": "past", "spike_query": "<>subject:Doha $and object:[w={}]Ankara $announced $a $twin $cities $agreement."}
{"pattern": "[Y] and [X] announced a twin cities agreement.", "example": "[Y]Doha and [X]Ankara :announced :a :twin :cities :agreement", "lemma": "announce-twin-city", "extended_lemma": "announce-twin-city-agreement", "tense": "past", "spike_query": "object:[w={}]Ankara $and <>subject:Doha $announced $a $twin $cities $agreement."}
{"pattern": "The mayor of [X] signed a twin cities agreement with [Y].", "example": "[X]mayor of Mont-St-Hilaire, Que., :signed :a :twin :cities :agreement :with [Y]Bujumbura.", "lemma": "sign-twin-city-agreement", "extended_lemma": "sign-twin-city-agreement", "tense": "past", "spike_query": "$The $mayor $of <>subject:Doha $signed $a $twin $cities $agreement $with object:[w={}]Ankara."}
{"pattern": "The mayor of [Y] signed a twin cities agreement with [X].", "example": "[Y]mayor of Mont-St-Hilaire, Que., :signed :a :twin :cities :agreement :with [X]Bujumbura.", "lemma": "sign-twin-city-agreement", "extended_lemma": "sign-twin-city-agreement", "tense": "past", "spike_query": "$The $mayor $of object:[w={}]Ankara $signed $a $twin $cities $agreement $with <>subject:Doha."}
{"pattern": "The mayor of [X] announced a twin cities agreement with [Y].", "example": "[X]mayor of Mont-St-Hilaire, Que., :announced :a :twin :cities :agreement :with [Y]Bujumbura.", "lemma": "announce-twin-city-agreement", "extended_lemma": "announce-twin-city-agreement", "tense": "past", "spike_query": "$The $mayor $of <>subject:Doha $announced $a $twin $cities $agreement $with object:[w={}]Ankara."}
{"pattern": "The mayor of [Y] announced a twin cities agreement with [X].", "example": "[Y]mayor of Mont-St-Hilaire, Que., :announced :a :twin :cities :agreement :with [X]Bujumbura.", "lemma": "announce-twin-city-agreement", "extended_lemma": "announce-twin-city-agreement", "tense": "past", "spike_query": "$The $mayor $of object:[w={}]Ankara $announced $a $twin $cities $agreement $with <>subject:Doha."}
